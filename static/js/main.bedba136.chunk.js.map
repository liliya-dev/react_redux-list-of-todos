{"version":3,"sources":["store/sortBy.tsx","store/index.ts","Api.ts","components/Start.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["sortBy","option","todos","order","sort","a","b","title","localeCompare","user","completed","ACTIONS","isLoading","state","loading","getTodos","getVisibleTodos","visibleTodos","initialState","store","createStore","action","type","field","composeWithDevTools","getData","url","fetch","then","response","json","tempData","data","mapDispatch","load","initTodos","connector","connect","todosList","getTodoList","findUserById","id","person","users","find","name","list","map","todo","userId","className","onClick","setVisible","scope","key","readOnly","checked","App","useSelector","todoList","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bedba136.chunk.js","sourcesContent":["import { TodoWithUser } from '../interfaces';\n\nexport const sortBy = (option: string, todos: TodoWithUser[], order: boolean) => {\n  switch (option) {\n    case 'title':\n      return [...todos].sort((a, b) => (order\n        ? a.title.localeCompare(b.title)\n        : b.title.localeCompare(a.title)));\n\n    case 'user':\n      return [...todos].sort((a, b) => (order\n        ? a.user.localeCompare(b.user)\n        : b.user.localeCompare(a.user)));\n\n    case 'completed':\n      return [...todos].sort((a, b) => {\n        if (order) {\n          return (a.completed > b.completed) ? 1 : -1;\n        }\n\n        return (a.completed < b.completed) ? 1 : -1;\n      });\n\n    default:\n      return todos;\n  }\n};\n","/* eslint-disable no-console */\nimport { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { TodoWithUser } from '../interfaces';\nimport { sortBy } from './sortBy';\n\nconst ACTIONS = {\n  START_LOADING: 'START_LOADING',\n  SET_TODOS: 'SET_TODOS',\n  SET_VISIBLE_TODOS: 'SET_VISIBLE_TODOS',\n  SET_ORDER: 'SET_ORDER',\n};\n\nexport const setVisibleTodos = (field: string) => ({ type: ACTIONS.SET_VISIBLE_TODOS, field });\nexport const setTodos = (todos: TodoWithUser[]) => ({ type: ACTIONS.SET_TODOS, todos });\nexport const startLoading = () => ({ type: ACTIONS.START_LOADING });\nexport const setOrder = () => ({ type: ACTIONS.SET_ORDER });\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const getTodos = (state: RootState) => state.todos;\nexport const getVisibleTodos = (state: RootState) => state.visibleTodos;\n\nexport type RootState = {\n  loading: boolean;\n  todos: TodoWithUser[];\n  visibleTodos: TodoWithUser[];\n  order: boolean;\n};\n\nconst initialState: RootState = {\n  loading: false,\n  todos: [],\n  visibleTodos: [],\n  order: true,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ACTIONS.START_LOADING:\n      return { ...state, loading: !state.loading };\n    case ACTIONS.SET_TODOS:\n      return { ...state, todos: action.todos, visibleTodos: action.todos };\n    case ACTIONS.SET_VISIBLE_TODOS:\n      return {\n        ...state,\n        visibleTodos: sortBy(action.field, state.todos, state.order),\n        order: !state.order,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","export const URLTodos = 'https://mate.academy/students-api/todos';\nexport const URLUsers = 'https://mate.academy/students-api/users';\n\nexport const getData = async <T>(url: string): Promise<T[]> => {\n  const tempData = await fetch(url)\n    .then(response => response.json());\n\n  return tempData.data;\n};\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  RootState, startLoading, setTodos, getTodos,\n} from '../store';\nimport { getData, URLTodos, URLUsers } from '../Api';\nimport { User, Todo, TodoWithUser } from '../interfaces';\n\nconst mapState = (state: RootState) => {\n  return {\n    todosList: getTodos(state),\n  };\n};\n\nconst mapDispatch = {\n  load: startLoading,\n  initTodos: setTodos,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype Props = ConnectedProps<typeof connector> & {\n  title?: string;\n};\n\nconst Start: React.FC<Props> = ({ load, initTodos }) => {\n  const getTodoList = async () => {\n    load();\n    const todos = await getData<Todo>(URLTodos);\n    const users = await getData<User>(URLUsers);\n\n    function findUserById(id: number) {\n      const person = users.find(user => user.id === id);\n\n      return (person) ? person.name : '';\n    }\n\n    const list: TodoWithUser[] = todos.map(todo => {\n      return {\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n        user: findUserById(todo.userId),\n      };\n    });\n\n    load();\n    initTodos(list);\n  };\n\n  return (\n    <button\n      className=\"btn btn-dark ml shadow p-3 mb-5  rounded\"\n      type=\"button\"\n      onClick={getTodoList}\n    >\n      Load todos\n    </button>\n  );\n};\n\nexport default connector(Start);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  RootState, getVisibleTodos, setVisibleTodos,\n} from '../store';\n\nconst mapState = (state: RootState) => {\n  return {\n    todosList: getVisibleTodos(state),\n  };\n};\n\nconst mapDispatch = {\n  setVisible: setVisibleTodos,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype Props = ConnectedProps<typeof connector> & {};\n\nconst TodoList: React.FC<Props> = ({ todosList, setVisible }) => {\n  return (\n    <table className=\"table table-striped table-bordered\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">\n            <button\n              className=\"sort_btn\"\n              type=\"button\"\n              onClick={() => setVisible('completed')}\n            >\n              Completed\n            </button>\n          </th>\n          <th scope=\"col\">\n            <button\n              type=\"button\"\n              className=\"sort_btn\"\n              onClick={() => setVisible('title')}\n            >\n              Title\n            </button>\n          </th>\n          <th scope=\"col\">\n            <button\n              type=\"button\"\n              className=\"sort_btn\"\n              onClick={() => setVisible('user')}\n            >\n              User\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          todosList.map(todo => (\n            <tr key={todo.id}>\n              <td><input type=\"checkbox\" readOnly checked={todo.completed} /></td>\n              <td>{todo.title}</td>\n              <td>{todo.user}</td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nexport default connector(TodoList);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './App.scss';\nimport Start from './components/Start';\nimport TodoList from './components/TodoList';\n\nimport { isLoading, getTodos } from './store';\n\nconst App = () => {\n  const loading = useSelector(isLoading);\n  const todoList = useSelector(getTodos);\n\n  return (\n    <div className=\"App\">\n      <h2>{loading && 'Loading...'}</h2>\n      {\n        (!todoList.length && loading === false) && <Start />\n      }\n      {\n        todoList.length !== 0 && <TodoList />\n      }\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}