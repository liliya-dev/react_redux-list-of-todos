{"version":3,"sources":["store/sortBy.tsx","store/index.ts","Api.ts","components/Start.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["sortBy","option","todos","order","sort","a","b","title","localeCompare","user","completed","ACTIONS","isLoading","state","loading","getTodos","getVisibleTodos","visibleTodos","initialState","store","createStore","action","type","payload","composeWithDevTools","getData","url","fetch","response","json","result","data","mapDispatch","initTodos","connector","connect","todosList","getTodoList","findUserById","id","person","users","find","name","list","map","todo","userId","className","onClick","setVisible","field","scope","key","readOnly","checked","App","useSelector","todoList","length","Root","ReactDOM","render","document","getElementById"],"mappings":"+RAEaA,EAAS,SAACC,EAAgBC,EAAuBC,GAC5D,OAAQF,GACN,IAAK,QACH,OAAO,YAAIC,GAAOE,MAAK,SAACC,EAAGC,GAAJ,OAAWH,EAC9BE,EAAEE,MAAMC,cAAcF,EAAEC,OACxBD,EAAEC,MAAMC,cAAcH,EAAEE,UAE9B,IAAK,OACH,OAAO,YAAIL,GAAOE,MAAK,SAACC,EAAGC,GAAJ,OAAWH,EAC9BE,EAAEI,KAAKD,cAAcF,EAAEG,MACvBH,EAAEG,KAAKD,cAAcH,EAAEI,SAE7B,IAAK,YACH,OAAO,YAAIP,GAAOE,MAAK,SAACC,EAAGC,GACzB,OAAIH,EACME,EAAEK,UAAYJ,EAAEI,UAAa,GAAK,EAGpCL,EAAEK,UAAYJ,EAAEI,UAAa,GAAK,KAG9C,QACE,OAAOR,ICnBPS,EACW,gBADXA,EAEO,YAFPA,EAGe,oBASRC,EAAY,SAACC,GAAD,OAAsBA,EAAMC,SACxCC,EAAW,SAACF,GAAD,OAAsBA,EAAMX,OACvCc,EAAkB,SAACH,GAAD,OAAsBA,EAAMI,cASrDC,EAA0B,CAC9BJ,SAAS,EACTZ,MAAO,GACPe,aAAc,GACdd,OAAO,GAgCMgB,EALDC,uBAxBM,WAA8C,IAA7CP,EAA4C,uDAApCK,EAAcG,EAAsB,uCAC/D,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFE,GADL,IAEEC,SAAUD,EAAMC,UAEpB,KAAKH,EACH,OAAO,2BACFE,GADL,IAEEX,MAAOmB,EAAOE,QACdN,aAAcI,EAAOE,UAEzB,KAAKZ,EACH,OAAO,2BACFE,GADL,IAEEI,aAAcjB,EAAOqB,EAAOE,QAASV,EAAMX,MAAOW,EAAMV,OACxDA,OAAQU,EAAMV,QAElB,QACE,OAAOU,KAMXW,iC,gCC1DWC,EAAO,uCAAG,WAAUC,GAAV,iBAAArB,EAAA,sEACEsB,MAAMD,GADR,cACfE,EADe,gBAEAA,EAASC,OAFT,cAEfC,EAFe,yBAIdA,EAAOC,MAJO,2CAAH,sDCkDdC,EAAc,CAClBpB,UFxC0B,iBAAO,CAAEU,KAAMX,IEyCzCsB,UF1CsB,SAAC/B,GAAD,MAA4B,CAAEoB,KAAMX,EAAmBY,QAASrB,KE+CzEgC,EAFGC,aAVD,SAACtB,GAAD,MAAuB,CACtCuB,UAAWrB,EAASF,MAScmB,EAErBE,EA9CgB,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,UAAWqB,EAAgB,EAAhBA,UACrCI,EAAW,uCAAG,qBAKTC,EALS,WAAAjC,EAAA,6DAKTiC,EALS,SAKIC,GACpB,IAAMC,EAASC,EAAMC,MAAK,SAAAjC,GAAI,OAAIA,EAAK8B,KAAOA,KAE9C,OAAOC,EAASA,EAAOG,KAAO,IAPhC/B,IADkB,SAEEa,EDjBC,2CCeH,cAEZvB,EAFY,gBAGEuB,EDjBC,2CCcH,OAGZgB,EAHY,OAWZG,EAAuB1C,EAAM2C,KAAI,SAAAC,GAAI,MAAK,CAC9CP,GAAIO,EAAKP,GACThC,MAAOuC,EAAKvC,MACZG,UAAWoC,EAAKpC,UAChBD,KAAM6B,EAAaQ,EAAKC,YAG1BnC,IACAqB,EAAUW,GAnBQ,4CAAH,qDAsBjB,OACE,4BACEI,UAAU,0CACV1B,KAAK,SACL2B,QAASZ,GAHX,iBC0BEL,EAAc,CAClBkB,WHrD6B,SAACC,GAAD,MAAoB,CAAE7B,KAAMX,EAA2BY,QAAS4B,KG0DhFjB,EAFGC,aARD,SAACtB,GAAD,MAAuB,CACtCuB,UAAWpB,EAAgBH,MAOOmB,EAErBE,EAzDmB,SAAC,GAAD,IAAGE,EAAH,EAAGA,UAAWc,EAAd,EAAcA,WAAd,OAChC,2BAAOF,UAAU,sCACf,2BAAOA,UAAU,cACf,4BACE,wBAAII,MAAM,OACR,4BACEJ,UAAU,WACV1B,KAAK,SACL2B,QAAS,kBAAMC,EAAW,eAH5B,cAQF,wBAAIE,MAAM,OACR,4BACE9B,KAAK,SACL0B,UAAU,WACVC,QAAS,kBAAMC,EAAW,WAH5B,UAQF,wBAAIE,MAAM,OACR,4BACE9B,KAAK,SACL0B,UAAU,WACVC,QAAS,kBAAMC,EAAW,UAH5B,WAUN,+BAEId,EAAUS,KAAI,SAAAC,GAAI,OAChB,wBAAIO,IAAKP,EAAKP,IACZ,4BAAI,2BAAOjB,KAAK,WAAWgC,UAAQ,EAACC,QAAST,EAAKpC,aAClD,4BAAKoC,EAAKvC,OACV,4BAAKuC,EAAKrC,eC7BP+C,EAdH,WACV,IAAM1C,EAAU2C,YAAY7C,GACtB8C,EAAWD,YAAY1C,GAE7B,OACE,yBAAKiC,UAAU,OACb,4BAAKlC,GAAW,eACb4C,EAASC,SAAsB,IAAZ7C,GAAsB,kBAAC,EAAD,MACvB,IAApB4C,EAASC,QAAgB,kBAAC,EAAD,QCT1BC,EAAO,kBACX,kBAAC,IAAD,CAAUzC,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAKN0C,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.69895745.chunk.js","sourcesContent":["import { TodoWithUser } from '../interfaces';\n\nexport const sortBy = (option: string, todos: TodoWithUser[], order: boolean) => {\n  switch (option) {\n    case 'title':\n      return [...todos].sort((a, b) => (order\n        ? a.title.localeCompare(b.title)\n        : b.title.localeCompare(a.title)));\n\n    case 'user':\n      return [...todos].sort((a, b) => (order\n        ? a.user.localeCompare(b.user)\n        : b.user.localeCompare(a.user)));\n\n    case 'completed':\n      return [...todos].sort((a, b) => {\n        if (order) {\n          return (a.completed > b.completed) ? 1 : -1;\n        }\n\n        return (a.completed < b.completed) ? 1 : -1;\n      });\n\n    default:\n      return todos;\n  }\n};\n","import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { TodoWithUser } from '../interfaces';\nimport { sortBy } from './sortBy';\n\nconst ACTIONS = {\n  START_LOADING: 'START_LOADING',\n  SET_TODOS: 'SET_TODOS',\n  SET_VISIBLE_TODOS: 'SET_VISIBLE_TODOS',\n  SET_ORDER: 'SET_ORDER',\n};\n\nexport const setVisibleTodos = (field: string) => ({ type: ACTIONS.SET_VISIBLE_TODOS, payload: field });\nexport const setTodos = (todos: TodoWithUser[]) => ({ type: ACTIONS.SET_TODOS, payload: todos });\nexport const startLoading = () => ({ type: ACTIONS.START_LOADING });\nexport const setOrder = () => ({ type: ACTIONS.SET_ORDER });\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const getTodos = (state: RootState) => state.todos;\nexport const getVisibleTodos = (state: RootState) => state.visibleTodos;\n\nexport type RootState = {\n  loading: boolean;\n  todos: TodoWithUser[];\n  visibleTodos: TodoWithUser[];\n  order: boolean;\n};\n\nconst initialState: RootState = {\n  loading: false,\n  todos: [],\n  visibleTodos: [],\n  order: true,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ACTIONS.START_LOADING:\n      return {\n        ...state,\n        loading: !state.loading,\n      };\n    case ACTIONS.SET_TODOS:\n      return {\n        ...state,\n        todos: action.payload,\n        visibleTodos: action.payload,\n      };\n    case ACTIONS.SET_VISIBLE_TODOS:\n      return {\n        ...state,\n        visibleTodos: sortBy(action.payload, state.todos, state.order),\n        order: !state.order,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","export const TODOS_URL = 'https://mate.academy/students-api/todos';\nexport const USERS_URL = 'https://mate.academy/students-api/users';\n\nexport const getData = async <T>(url: string): Promise<T[]> => {\n  const response = await fetch(url);\n  const result = await response.json();\n\n  return result.data;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  RootState, startLoading, setTodos, getTodos,\n} from '../store';\nimport { getData, TODOS_URL, USERS_URL } from '../Api';\nimport { User, Todo, TodoWithUser } from '../interfaces';\n\ntype Props = {\n  isLoading: () => (void);\n  initTodos: (todos: TodoWithUser[]) => (void);\n};\n\nconst Start: React.FC<Props> = ({ isLoading, initTodos }) => {\n  const getTodoList = async () => {\n    isLoading();\n    const todos = await getData<Todo>(TODOS_URL);\n    const users = await getData<User>(USERS_URL);\n\n    function findUserById(id: number) {\n      const person = users.find(user => user.id === id);\n\n      return person ? person.name : '';\n    }\n\n    const list: TodoWithUser[] = todos.map(todo => ({\n      id: todo.id,\n      title: todo.title,\n      completed: todo.completed,\n      user: findUserById(todo.userId),\n    }));\n\n    isLoading();\n    initTodos(list);\n  };\n\n  return (\n    <button\n      className=\"btn btn-dark ml shadow p-3 mb-5 rounded\"\n      type=\"button\"\n      onClick={getTodoList}\n    >\n      Load todos\n    </button>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  todosList: getTodos(state),\n}\n);\n\nconst mapDispatch = {\n  isLoading: startLoading,\n  initTodos: setTodos,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Start);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TodoWithUser } from '../interfaces';\n\nimport {\n  RootState, getVisibleTodos, setVisibleTodos,\n} from '../store';\n\ntype Props = {\n  todosList: TodoWithUser[];\n  setVisible: (option: string) => (void);\n};\n\nconst TodoList: React.FC<Props> = ({ todosList, setVisible }) => (\n  <table className=\"table table-striped table-bordered\">\n    <thead className=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">\n          <button\n            className=\"sort_btn\"\n            type=\"button\"\n            onClick={() => setVisible('completed')}\n          >\n            Completed\n          </button>\n        </th>\n        <th scope=\"col\">\n          <button\n            type=\"button\"\n            className=\"sort_btn\"\n            onClick={() => setVisible('title')}\n          >\n            Title\n          </button>\n        </th>\n        <th scope=\"col\">\n          <button\n            type=\"button\"\n            className=\"sort_btn\"\n            onClick={() => setVisible('user')}\n          >\n            User\n          </button>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        todosList.map(todo => (\n          <tr key={todo.id}>\n            <td><input type=\"checkbox\" readOnly checked={todo.completed} /></td>\n            <td>{todo.title}</td>\n            <td>{todo.user}</td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n\nconst mapState = (state: RootState) => ({\n  todosList: getVisibleTodos(state),\n});\n\nconst mapDispatch = {\n  setVisible: setVisibleTodos,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(TodoList);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './App.scss';\nimport Start from './components/Start';\nimport TodoList from './components/TodoList';\n\nimport { isLoading, getTodos } from './store';\n\nconst App = () => {\n  const loading = useSelector(isLoading);\n  const todoList = useSelector(getTodos);\n\n  return (\n    <div className=\"App\">\n      <h2>{loading && 'Loading...'}</h2>\n      {(!todoList.length && loading === false) && <Start />}\n      {todoList.length !== 0 && <TodoList />}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}